#!/bin/sh

#Original /etc/init.d/skeleton modified for http://mydebian.blogdns.org

COUCHDB_LUCENE_DIR="/usr/share/couchdb-lucene-0.9.0"

### BEGIN INIT INFO
# Provides:          couchdb
# Required-Start:    $local_fs $remote_fs
# Required-Stop:     $local_fs $remote_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: CouchDB Lucene init script.
# Description:       CouchDB Lucene init script.
### END INIT INFO


# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="lucene server for CouchDB"
NAME="couchdb-lucene"
DAEMON=/usr/bin/java

JAVA_OPTS="-server -Xmx1g"
CLASS=com.github.rnewson.couchdb.lucene.Main
CLASSPATH="$COUCHDB_LUCENE_DIR/conf"
for JAR in `ls $COUCHDB_LUCENE_DIR/lib/*.jar`
do
  CLASSPATH="$CLASSPATH:$JAR"
done

PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/couchdb-lucene

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    start-stop-daemon --start --make-pidfile --pidfile $PIDFILE --background --verbose --exec $DAEMON -- $JAVA_OPTS -cp $CLASSPATH $CLASS
}

#
# Function that stops the daemon/service
#
do_stop()
{
    start-stop-daemon --stop --quiet --oknodo --pidfile $PIDFILE
    RETVAL="$?"
    rm -f $PIDFILE
    return "$RETVAL"
}

case "$1" in
  start)
 [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
 do_start
 case "$?" in
  0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
  2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
 esac
 ;;
  stop)
 [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
 do_stop
 case "$?" in
  0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
  2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
 esac
 ;;
  restart)
 #
 # If the "reload" option is implemented then remove the
 # 'force-reload' alias
 #
 log_daemon_msg "Restarting $DESC" "$NAME"
 do_stop
 case "$?" in
   0|1)
  do_start
  case "$?" in
   0) log_end_msg 0 ;;
   1) log_end_msg 1 ;; # Old process is still running
   *) log_end_msg 1 ;; # Failed to start
  esac
  ;;
   *)
    # Failed to stop
  log_end_msg 1
  ;;
 esac
 ;;
  *)
 echo "Usage: $SCRIPTNAME {start|stop|restart}" >&2
 exit 3
 ;;
esac

: